/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Community;
import model.House;
import model.System;

/**
 *
 * @author gunasekhar
 */
public class houseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form houseJPanel
     */
    private JPanel displayJPanel;
    private System system;
    private Community community;
    
    public houseJPanel(JPanel displayJPanel, System system, Community community) {
        this.displayJPanel=displayJPanel;
        this.system=system;
        this.community=community;
        initComponents();
        populateHouses();
    }
    
    

    private String formatDate(Date date){
       
        String pattern = "yyyy-MM-dd HH:mm:ss";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        return simpleDateFormat.format(date);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        goJButton = new javax.swing.JButton();
        housesJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        housesJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        updateJButton = new javax.swing.JButton();
        lblstreetname = new javax.swing.JLabel();
        lblhousename = new javax.swing.JLabel();
        lblcountry = new javax.swing.JLabel();
        txthousename = new javax.swing.JTextField();
        addnewhouseJButton = new javax.swing.JButton();
        txtstate = new javax.swing.JTextField();
        txtcountry = new javax.swing.JTextField();

        goJButton.setText("Go");
        goJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goJButtonActionPerformed(evt);
            }
        });

        housesJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        housesJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        housesJLabel.setText("Houses Present");

        housesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "House Name", "State", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        housesJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                housesJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(housesJTable);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        updateJButton.setText("Update");
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        lblstreetname.setText("State : ");

        lblhousename.setText("House Name : ");

        lblcountry.setText("Country : ");

        txthousename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthousenameActionPerformed(evt);
            }
        });

        addnewhouseJButton.setText("Add New House");
        addnewhouseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addnewhouseJButtonActionPerformed(evt);
            }
        });

        txtstate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstateActionPerformed(evt);
            }
        });

        txtcountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcountryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addnewhouseJButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(goJButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(housesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(142, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblhousename)
                .addGap(18, 18, 18)
                .addComponent(txthousename, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblstreetname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addJButton)
                        .addGap(30, 30, 30)
                        .addComponent(updateJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblcountry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(housesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteJButton)
                    .addComponent(goJButton)
                    .addComponent(addnewhouseJButton))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthousename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblhousename, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstreetname, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateJButton)
                    .addComponent(addJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void goJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = housesJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please Select any Community to View the Houses");
            return;
        }

        showPersonsInCommunity(selectedRow);
    }//GEN-LAST:event_goJButtonActionPerformed

    private void showPersonsInCommunity(int selectedRow) {
        
        DefaultTableModel model = (DefaultTableModel) housesJTable.getModel();
        House house = (House) model.getValueAt(selectedRow, 0);
        if (house.getPersons().isEmpty()==true){
            JOptionPane.showMessageDialog(this, "No persons available under this House");
        }navigateToPersons(house);
    }
    
    private void navigateToPersons(House house) {
        
        PersonJPanel personJPanel = new PersonJPanel(displayJPanel, house);
        displayJPanel.add("PersonsInformation", personJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        CardLayout cardLayout =  (CardLayout) displayJPanel.getLayout();
        cardLayout.previous(displayJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        //AddCommunityJPanel addCommunityJPanel = new AddCommunityJPanel(displayJPanel, city);
        //displayJPanel.add("AddCommunityScreen", addCommunityJPanel);
        //CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        //cardLayout.next(displayJPanel);
        if (txthousename.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Please enter a valid House name");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) housesJTable.getModel();
        
        for(House house:community.getHouses()){
            if (txthousename.getText().equals(house.getHouseName())){
                JOptionPane.showMessageDialog(this, "House name already exists\nPlease enter a different house name");
                return;
            }
        }
        
        House house = new House(txthousename.getText(), txtstate.getText(), txtcountry.getText());
        community.getHouses().add(house);
        populateHouses();             
    }//GEN-LAST:event_addJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        int selectedRowIndex = housesJTable.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) housesJTable.getModel();
        House house = (House) model.getValueAt(selectedRowIndex, 0);

        community.getHouses().remove(house);

        txthousename.setText("");
        txtstate.setText("");
        txtcountry.setText("");

        JOptionPane.showMessageDialog(this, "House deleted successfully");
        populateHouses();

    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        int selectedRowIndex = housesJTable.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) housesJTable.getModel();
        House house = (House) model.getValueAt(selectedRowIndex, 0);

        if (house.getHouseName().equals(txthousename.getText()) && house.getState().equals(txtstate.getText()) && house.getCountry().equals(txtcountry.getText())){
            JOptionPane.showMessageDialog(this, "No new values entered\nPlease enter a new house name");
            return;
        }else if (txthousename.getText().equals("") && txtstate.getText().equals("") && txtcountry.getText().equals("")){
            JOptionPane.showMessageDialog(this, "House Name is blank\nPlease enter a valid house name");
            return;
        }
        else{
            house.setHouseName(txthousename.getText());
            house.setState(txtstate.getText());
            house.setCountry(txtcountry.getText());

            JOptionPane.showMessageDialog(this, "House updated successfully");
            populateHouses();

            txthousename.setText("");
            txtstate.setText("");
            txtcountry.setText("");
        }
    }//GEN-LAST:event_updateJButtonActionPerformed

    
    private void populateHouses() {
        
        DefaultTableModel model = (DefaultTableModel) housesJTable.getModel();
        model.setRowCount(0);
        
        for(House house:community.getHouses()){
            Object[] row = new Object[3];
            row[0] = house;
            row[1] = house.getState();
            row[2] = house.getCountry();
            
            model.addRow(row);
        }
    }
    
    private void txthousenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthousenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthousenameActionPerformed

    private void housesJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_housesJTableMouseClicked
        int selectedRowIndex = housesJTable.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) housesJTable.getModel();
        House house = (House) model.getValueAt(selectedRowIndex, 0);
        
        txthousename.setText(house.getHouseName());
        txtstate.setText(house.getState());
        txtcountry.setText(house.getCountry());
    }//GEN-LAST:event_housesJTableMouseClicked

    private void addnewhouseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addnewhouseJButtonActionPerformed
        JOptionPane.showMessageDialog(this, "Please enter new house details");
        txthousename.setText("");
        txtstate.setText("");
        txtcountry.setText("");
    }//GEN-LAST:event_addnewhouseJButtonActionPerformed

    private void txtstateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstateActionPerformed

    private void txtcountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcountryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton addnewhouseJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JButton goJButton;
    private javax.swing.JLabel housesJLabel;
    private javax.swing.JTable housesJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcountry;
    private javax.swing.JLabel lblhousename;
    private javax.swing.JLabel lblstreetname;
    private javax.swing.JTextField txtcountry;
    private javax.swing.JTextField txthousename;
    private javax.swing.JTextField txtstate;
    private javax.swing.JButton updateJButton;
    // End of variables declaration//GEN-END:variables
}
